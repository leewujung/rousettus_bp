%% Planar array, direct summation without approximation
clear
d = -0.002;
n = 10;
freq = 35*1e3;
c = 344;
x_pos = 0:d:(n-1)*d;
x_pos = x_pos-mean(x_pos);
y_pos = zeros(size(x_pos));
x_pos = repmat(x_pos,1,3);
y_pos = [y_pos,y_pos+0.002,y_pos-0.002];
z_pos = zeros(size(x_pos));
r = 3;
[theta,phi] = meshgrid(0:3:90,-180:3:180);
% [theta,phi] = meshgrid(0:3:90,0:3:180);
% [theta,phi] = meshgrid(0:3:90,30:3:210);
[x,y,z] = sph2cart(phi(:)/180*pi,theta(:)/180*pi,r);

% Plot
figure
plot3(x,y,z,'.',',a');
hold on
plot3(x_pos*100,y_pos*100,z_pos*100,'-o');
quiver3(0,0,0,2,0,0,'k','linewidth',2)
quiver3(0,0,0,0,2,0,'k','linewidth',2)
quiver3(0,0,0,0,0,2,'k','linewidth',2)
xlabel('X'); ylabel('Y'); zlabel('Z');
grid on
axis equal

% Calculate beampattern
k = 2*pi*freq/c;
rn = sqrt((repmat(x',length(x_pos),1)-repmat(x_pos',1,length(x))).^2 +...
     (repmat(y',length(y_pos),1)-repmat(y_pos',1,length(y))).^2 +...
     (repmat(z',length(z_pos),1)-repmat(z_pos',1,length(z))).^2);
r = sqrt((x'-x_pos(1)).^2+(y'-y_pos(1)).^2+(z'-z_pos(1)).^2);
r_diff = rn-repmat(r,size(rn,1),1);
b = sum(1./rn.*exp(-1j*k*r_diff),1);
B = 20*log10(abs(b));
B = B-max(B);
B(B<-30) = NaN;

B = reshape(B,size(theta));
B(phi<30&phi>-30&theta<30&theta>-30) = 30;

x_mark = x(phi<30&phi>-30&theta<30&theta>-30);
y_mark = y(phi<30&phi>-30&theta<30&theta>-30);
z_mark = z(phi<30&phi>-30&theta<30&theta>-30);


% Set map projection
mstruct = defaultm('eckert4');
mstruct = defaultm(mstruct);

% Projection without rotate
figure;
axesm eckert4;
framem('fedgecolor',200*ones(1,3)/255,'flonlimit',[-120 120]);
gridm('gcolor',190*ones(1,3)/255,'glinestyle','-');
geoshow(theta,phi,B,'displaytype','texturemap');
caxis([-30 0])


% Project lat-lon to map projection distance
[lat1,lon1] = rotatem(theta,phi,[90 -90],'forward','degree');
lon1 = 90-lon1;  % flip +phi direction and rotate to bat coord
% [lat1,lon1] = rotatem(lat1,lon1,[0 -60],'forward','degree');
[xq,yq] = mfwdtran(mstruct,lat1,lon1);

figure
contourf(xq,yq,B,0:-3:-30);
view([0 0 1])
xlim([-pi pi])
axis equal